#+TITLE: Doom Emacs Configuration
#+AUTHOR: egorbelibov

#+BEGIN_QUOTE
No rules are universal (except this one).
#+END_QUOTE

* Core Configurations
Jiggle things up with lexical binding (see [[https://nullprogram.com/blog/2016/12/22/][this blog post]] for more info).
#+begin_src emacs-lisp :comments no
;;; config.el -*- lexical-binding: t; -*-
#+end_src

** User Info
You know, all the conventional stuff…
#+begin_src emacs-lisp
(setq
 user-full-name "Egor Belibov"
 user-mail-address "egor@belibov.dev")
#+end_src

** Sweat Defaults
#+BEGIN_QUOTE
We either live with intention or exist by default.
#+END_QUOTE

*** Common Settings
Quite personal matters, hence no further comments.
#+begin_src emacs-lisp
(setq-default
 delete-by-moving-to-trash t
 line-number-mode nil
 global-display-line-numbers-mode nil
 display-line-numbers-type nil
 doom-modeline-enable-word-count nil
 editorconfig-mode 1
 evil-want-fine-undo nil ;; t -> vim-like undo
 fill-column 100
 indent-tabs-mode nil
 tab-width 4
 ispell-dictionary "en_GB"
 locate-command "mdfind"
 multi-term-program "/bin/zsh"
 lsp-ui-mode nil)
#+end_src

Fine tuned defaults:
#+begin_src emacs-lisp
(set-default-coding-systems 'utf-8)
(remove-hook 'doom-first-buffer-hook #'smartparens-global-mode)
#+end_src

*** Buffer Defaults
New buffers should be, by default, opened in ~org-mode~, cause ~org-mode~.
#+begin_src emacs-lisp
(setq-default major-mode 'org-mode)
#+end_src

*** Performance Boosters
Let's put some thrusters on the back of this "Roadster".

Emacs has the capability to display ~left-to-right~ and ~right-to-left~ languages at the
same time in the same buffer. I don't need it. Because it adds to the amount of line scans
that Emacs has to do to render a line, here are some changes.
#+begin_src emacs-lisp
(setq-default bidi-paragraph-direction 'left-to-right)
#+end_src

When the lines in a file are so long that performance could suffer to an unacceptable
degree, the following invokes something much more basic.
#+begin_src emacs-lisp
(global-so-long-mode 1)
#+end_src

-----
*NOTE*: You can test and evaluate performance with ~profiler-start~ and ~profiler-stop~.

** User Interface
*** Font Face
The *ultimate* font for hackers.
#+begin_src emacs-lisp
(setq
 doom-font (font-spec :family "Hack" :size 12)
 doom-big-font (font-spec :family "Hack" :size 16)
 doom-variable-pitch-font (font-spec :family "Hack" :size 16)
 doom-serif-font (font-spec :family "Times New Roman"))
#+end_src

*** Theme
My *ultimate* theme based on ~Solarized~.
#+begin_src emacs-lisp
;; (load-theme 'eb-dark t)
;; (load-theme 'eb-light t)
(load-theme 'eb-white t)
#+end_src

*** Modeline
#+begin_src emacs-lisp
(setq-default
 mode-line-format
 '("%e"
   mode-line-front-space
   mode-line-mule-info
   mode-line-client
   mode-line-modified
   mode-line-remote
   mode-line-frame-identification
   mode-line-buffer-identification
   "   "
   mode-line-position
   (vc-mode vc-mode)
   "  "
   mode-line-misc-info mode-line-end-spaces))
#+end_src

*** Disable All The Icons
#+begin_src emacs-lisp
(defadvice! doom--disable-all-the-icons-in-tty-a (&rest _)
  :override '(all-the-icons-octicon all-the-icons-material
              all-the-icons-faicon all-the-icons-fileicon
              all-the-icons-wicon all-the-icons-alltheicon)
  "")
#+end_src

** Bindings
Life-time savers (kinda).

*** (Enable/Disable) Fill column
#+begin_src emacs-lisp
(map! :leader
      (:prefix "b"
       :desc "Display fill-column indicator"    "f" #'display-fill-column-indicator-mode))
#+end_src

*** File
#+begin_src emacs-lisp
(map!
 :leader
 (:prefix-map ("f" . "file")
  (:prefix-map ("g" . "goto")
   :desc "Drive"        "/" (cmd! (find-file "/"))
   :desc "Desktop"      "D" (cmd! (find-file "~/Desktop"))
   :desc "Main"         "m" (cmd! (find-file "~/main"))
   :desc "Downloads"    "d" (cmd! (find-file "~/Downloads"))
   :desc "Tmp"          "t" (cmd! (find-file "/tmp"))
   :desc "Home"         "h" (cmd! (find-file "~")))))
#+end_src

** Package Stack
:PROPERTIES:
:header-args:emacs-lisp: :tangle "packages.el" :comments link
:END:
#+begin_src emacs-lisp :tangle "packages.el" :comments no
;; -*- no-byte-compile: t; -*-
#+end_src

*** Instructions
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:END:
Install packages here, by declaring them with the ~package!~ macro.
Upon adding new package, run ~doom refresh~ and restart Emacs.

**** Package in MELPA/ELPA/emacsmirror
To install ~the-package~ from MELPA, ELPA or emacsmirror:
#+begin_src emacs-lisp
(package! the-package)
#+end_src

**** Packages from git repositories
To install a package directly from a particular repo, you'll need to specify a ~:recipe~.
You'll find documentation on what ~:recipe~ accepts [[https://github.com/raxod502/straight.el#the-recipe-format][here]]:
#+begin_src emacs-lisp
(package! another-package
  :recipe (:host github :repo "username/repo"))
#+end_src

If the package you are trying to install does not contain a ~PACKAGENAME.el~ file, or is
located in a subdirectory of the repo, you'll need to specify
~:files~ in the ~:recipe~:
#+begin_src emacs-lisp
(package! this-package
  :recipe (:host github :repo "username/repo"
           :files ("some-file.el" "src/lisp/*.el")))
#+end_src

**** Disabling build-in packages
To disable a package included with Doom, you can do so here with the ~:disable~ property:
#+begin_src emacs-lisp
(package! builtin-package :disable t)
#+end_src

#+RESULTS:
| builtin-package |

Override the recipe of a built in package without having to specify all the properties
for ~:recipe~. These will inherit the rest of its recipe from Doom or the
package providers.
#+begin_src emacs-lisp
(package! builtin-package :recipe (:nonrecursive t))
(package! builtin-package-2 :recipe (:repo "myfork/package"))
#+end_src

Specify a ~:branch~ to install a package from a particular branch or tag. This is required
for some

#+begin_src emacs-lisp
(package! builtin-package :recipe (:branch "develop"))
#+end_src

*** Sweat Packages
#+BEGIN_QUOTE
Always strive to make complex things simple.
#+END_QUOTE

**** All The Fun
Flash words, increase reading speed.
#+begin_src emacs-lisp
(package! spray)
#+end_src

Let's get those fingers moving.
#+begin_src emacs-lisp
(package! speed-type)
#+end_src

**** Convenient
The technologies of convenience are making our sphere of exploration and experience smaller.

The worst part about ~org-mode~? Having to leave it.
#+begin_src emacs-lisp
(package! org-pandoc-import
  :recipe (:host github
           :repo "tecosaur/org-pandoc-import"
           :files ("*.el" "filters" "preprocessors")))
#+end_src
#+begin_src emacs-lisp
(use-package! org-pandoc-import :after org)
#+end_src

The fanciest terminal for emacs.
#+begin_src emacs-lisp
(package! multi-term)
#+end_src

Who uses the mouse in Emacs?
#+begin_src emacs-lisp
(package! disable-mouse)
#+end_src

When in need of logging commands.
#+begin_src emacs-lisp
(package! command-log-mode)
#+end_src

Every one needs to jump around dumbly from time to time, right?
#+begin_src emacs-lisp
(package! dumb-jump)
#+end_src

For indentation. Specially useful for nim.
#+begin_src emacs-lisp
(package! indent-guide)
#+end_src

Elisp formatting
#+begin_src emacs-lisp
(package! elisp-format)
#+end_src

**** Language Support
If it ain't useful and fast, why bother?

Svelte, the love of my life.
#+begin_src emacs-lisp
(package! svelte-mode)
#+end_src

*** Balderdash (Disabled) Packages
Cause why in the world were they included?

Disable package that overlays code with errors/warnings from Flycheck
#+begin_src emacs-lisp
(package! flycheck-popup-tip :disable t)
#+end_src

** Package Configuration
#+BEGIN_QUOTE
Another famous fluctuation that programs you is the exact configuration of your DNA.
#+END_QUOTE

*** Calc
Cause radians are rad.
#+begin_src emacs-lisp
(setq calc-angle-mode 'rad
      calc-algebraic-mode t ;; allows '2*x instead of 'x<RET>2*
      calc-symbolic-mode t) ;; keeps stuff like √2 irrational for as long as possible
#+end_src

*** Company
Completion is nice but, only when I want it...
#+begin_src emacs-lisp
(after! company
  (setq company-idle-delay nil)
  (add-hook 'evil-normal-state-entry-hook #'company-abort))
#+end_src

Also, improve ~company~ (related) memory.
#+begin_src emacs-lisp
(setq-default history-length 50)
(setq-default history-delete-duplicates t)
#+end_src

*** Disable-Mousse
I ♥ my keyboard.
#+begin_src emacs-lisp
(global-disable-mouse-mode)
;; And, for evil's individual states.
(mapc #'disable-mouse-in-keymap
      (list evil-motion-state-map
            evil-normal-state-map
            evil-visual-state-map
            evil-insert-state-map))
#+end_src

*** Dumb-Jump
Enable ~xref~ back-end.

#+begin_src emacs-lisp
(setq lsp-lens-enable t
      lsp-modeline-code-actions-mode t
      lsp-headerline-breadcrumb-enable t)
#+end_src
